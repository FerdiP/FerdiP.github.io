<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-02-24T14:29:14+01:00</updated><id>http://localhost:4000/</id><title type="html">Duc-Duy Phan</title><subtitle>Embedded Systems Engineering Student</subtitle><entry><title type="html">SD Card with foxBMS</title><link href="http://localhost:4000/sd-card-with-foxbms/" rel="alternate" type="text/html" title="SD Card with foxBMS" /><published>2017-12-24T00:00:00+01:00</published><updated>2017-12-24T00:00:00+01:00</updated><id>http://localhost:4000/sd-card-with-foxbms</id><content type="html" xml:base="http://localhost:4000/sd-card-with-foxbms/">&lt;p&gt;An SD Card female connector is available on foxBMS Extension board. It is therefore, available for us to store and read some data under, such as, text files. Let’s begin this task by several preparations!&lt;/p&gt;

&lt;h2 id=&quot;notices&quot;&gt;[Notices]&lt;/h2&gt;
&lt;p&gt;The version of foxBMS’s embedded software I am using is NOT the newest version-1.0.0. There might needed changes, but I hope that the following jobs can be integrated easily into the newest software version.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;[Requirements]&lt;/h2&gt;
&lt;p&gt;1/ A SD Card, which is formated under FAT. You can do it by Quick Format in Windows.&lt;/p&gt;

&lt;p&gt;2/ &lt;a href=&quot;http://elm-chan.org/fsw/ff/00index_e.html&quot;&gt;FatFs&lt;/a&gt; Module by Chan. I used FatFs R0.13a. For a easier setup, I recommend to download the “FatFs sample projects for various platforms” (scroll down to the end of the page and click to download!).&lt;/p&gt;

&lt;p&gt;3/ A running foxBMS project on Eclipse. Debugging with Eclipse is not important, because I got problems while using Eclipse under Debug mode. So, it must only compile and generate “.hex” file.&lt;/p&gt;

&lt;h2 id=&quot;getting-start&quot;&gt;[Getting Start]&lt;/h2&gt;

&lt;h2 id=&quot;programming&quot;&gt;[Programming]&lt;/h2&gt;
&lt;p&gt;1/ Naviagate to “../foxBMS_primary/src/module/” . Create a new folder: sdcard.&lt;/p&gt;

&lt;p&gt;2/ Remember that we downloaded the “FatFs sample projects for various platforms”? For the task I am doing, I need to copy those files: “ff.h”, “ff.c”, “ffconf.h”, “ffunicode.c”, “integer.h”, “diskio.h”, “mmc_stm32f1.c”. For anyone that are familiar to FatFs, the file “mmc_stm32f1.c” has the same function as “diskio.c”. Therefore, I prefer to rename “mmc_stm32f1.c” into “diskio.c”.&lt;/p&gt;

&lt;h2 id=&quot;running&quot;&gt;[Running]&lt;/h2&gt;</content><author><name></name></author><summary type="html">An SD Card female connector is available on foxBMS Extension board. It is therefore, available for us to store and read some data under, such as, text files. Let’s begin this task by several preparations!</summary></entry><entry><title type="html">Setting up BMS Primary on Eclipse C/C++</title><link href="http://localhost:4000/setting-up-bms-primary-on-eclipse-c-c/" rel="alternate" type="text/html" title="Setting up BMS Primary on Eclipse C/C++" /><published>2017-12-23T00:00:00+01:00</published><updated>2017-12-23T00:00:00+01:00</updated><id>http://localhost:4000/setting-up-bms-primary-on-eclipse-c-c</id><content type="html" xml:base="http://localhost:4000/setting-up-bms-primary-on-eclipse-c-c/">&lt;p&gt;Although the foxBMS comes with foxConda, which is a graphic interface for configurations, it is not available for developers to add further features to the system. In the following, I will go through the step to get foxBMS running on a free IDE for embedded systems - Eclipse. There are many others IDE that we can use, such as Keil, or Visual Studio but they are either restricted or not free. So, the reason to use Eclipse is clear: developers have a free, open IDE and compatible with foxConda.&lt;/p&gt;

&lt;p&gt;Requirements:&lt;/p&gt;</content><author><name></name></author><summary type="html">Although the foxBMS comes with foxConda, which is a graphic interface for configurations, it is not available for developers to add further features to the system. In the following, I will go through the step to get foxBMS running on a free IDE for embedded systems - Eclipse. There are many others IDE that we can use, such as Keil, or Visual Studio but they are either restricted or not free. So, the reason to use Eclipse is clear: developers have a free, open IDE and compatible with foxConda.</summary></entry><entry><title type="html">Bring power to life!</title><link href="http://localhost:4000/Hello-World/" rel="alternate" type="text/html" title="Bring power to life!" /><published>2014-03-03T00:00:00+01:00</published><updated>2014-03-03T00:00:00+01:00</updated><id>http://localhost:4000/Hello-World</id><content type="html" xml:base="http://localhost:4000/Hello-World/">&lt;p&gt;Open discussion about Battery Management System&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/config.png&quot; alt=&quot;_config.yml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A good beginning is the foxBMS. For more instructions head over to the &lt;a href=&quot;https://foxbms.readthedocs.io/en/release-0.5.x/getting_started/general/general.html&quot;&gt;foxBMS Documents&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Open discussion about Battery Management System</summary></entry></feed>